org: ngocnhelife
app: cs3dev
service: backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: us-east-2
  environment:    
    DB_HOST: ${param:DB_HOST, 'cs3dev.cr93xtx01yjn.ap-southeast-1.rds.amazonaws.com'}
    DB_USERNAME: ${param:DB_USERNAME, 'admin'}
    DB_PASSWORD: ${param:DB_PASSWORD, '123456789'}
    DB_NAME: ${param:DB_NAME, 'cs3dev'}

functions:
  #Entry
  getEntries:
    handler: modules/entry/getEntries.lambda_handler

  #Comment
  createComment:
    handler: modules/comment/createComment.lambda_handler

  #Test
  getTestById:
    handler: modules/test/getTestById.lambda_handler

plugins:
  - serverless-appsync-plugin

custom:
  appSync:
    name: ${sls:stage}_CS3_Backend
    schema: graphql/schema.graphql
    authenticationType: API_KEY
    defaultMappingTemplates:
      request: false
      response: false
    mappingTemplates:
      #Entry
      - dataSource: getEntries
        type: Query
        field: getEntries

      #Comment
      - dataSource: createComment
        type: Mutation
        field: createComment

      #Test
      - dataSource: getTestById
        type: Query
        field: getTestById

    dataSources:
      #Entry
      - type: AWS_LAMBDA
        name: getEntries
        config:
          functionName: getEntries

      #Comment
      - type: AWS_LAMBDA
        name: createComment
        config:
          functionName: createComment

      #Test
      - type: AWS_LAMBDA
        name: getTestById
        config:
          functionName: getTestById

layers:
  layerOne:
    path: lambda_layers/pymysql_jwt_pytz.zip
    name: ${sls:stage}-pymysql_jwt_pyzt
    description: cs3 pymysql pwt pyzt
    retain: false